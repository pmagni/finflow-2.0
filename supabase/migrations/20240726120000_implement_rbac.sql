-- CUSTOM TYPES
create type public.app_permission as enum ('channels.delete', 'messages.delete');
create type public.app_role as enum ('admin', 'moderator');

-- USER ROLES
create table public.user_roles (
    id bigint generated by default as identity primary key,
    user_id uuid references auth.users on delete cascade not null,
    role app_role not null,
    unique (user_id, role)
);
comment on table public.user_roles is 'Application roles for each user.';

-- ROLE PERMISSIONS
create table public.role_permissions (
    id bigint generated by default as identity primary key,
    role app_role not null,
    permission app_permission not null,
    unique (role, permission)
);
comment on table public.role_permissions is 'Application permissions for each role.';

-- SEED DATA
insert into public.role_permissions (role, permission)
values
    ('admin', 'channels.delete'),
    ('admin', 'messages.delete'),
    ('moderator', 'messages.delete');


-- HELPER FUNCTIONS
create or replace function public.authorize(
    requested_permission app_permission,
    user_id uuid
)
returns boolean as $$
declare
    bind_permissions int;
begin
    select count(*)
    from public.role_permissions
    inner join public.user_roles on role_permissions.role = user_roles.role
    where user_roles.user_id = authorize.user_id
      and role_permissions.permission = requested_permission
    into bind_permissions;

    return bind_permissions > 0;
end;
$$ language plpgsql security definer;

-- RLS POLICIES
-- First, enable RLS for user_roles and role_permissions
alter table public.user_roles enable row level security;
alter table public.role_permissions enable row level security;

create policy "Admins can assign roles" on public.user_roles
    for insert with check (public.authorize('channels.delete', auth.uid()));

create policy "Admins can view roles" on public.user_roles
    for select using (public.authorize('channels.delete', auth.uid()));

create policy "Users can view their own roles" on public.user_roles
    for select using (auth.uid() = user_id); 